<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.shop.mapper.DataMemberCoinItemMapper">
    
    <resultMap type="DataMemberCoinItem" id="DataMemberCoinItemResult">
        <result property="id"    column="id"    />
        <result property="mid"    column="mid"    />
        <result property="code"    column="code"    />
        <result property="date"    column="date"    />
        <result property="type"    column="type"    />
        <result property="name"    column="name"    />
        <result property="number"    column="number"    />
        <result property="createAt"    column="create_at"    />
    </resultMap>

    <sql id="selectDataMemberCoinItemVo">
        select id, mid, code, date, type, name, number, create_at from data_member_coin_item
    </sql>

    <select id="selectDataMemberCoinItemList" parameterType="DataMemberCoinItem" resultMap="DataMemberCoinItemResult">
        <include refid="selectDataMemberCoinItemVo"/>
        <where>  
            <if test="mid != null "> and mid = #{mid}</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="date != null  and date != ''"> and date = #{date}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="number != null "> and number = #{number}</if>
            <if test="createAt != null "> and create_at = #{createAt}</if>
        </where>
    </select>
    
    <select id="selectDataMemberCoinItemById" parameterType="Long" resultMap="DataMemberCoinItemResult">
        <include refid="selectDataMemberCoinItemVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertDataMemberCoinItem" parameterType="DataMemberCoinItem" useGeneratedKeys="true" keyProperty="id">
        insert into data_member_coin_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mid != null">mid,</if>
            <if test="code != null">code,</if>
            <if test="date != null">date,</if>
            <if test="type != null">type,</if>
            <if test="name != null">name,</if>
            <if test="number != null">number,</if>
            <if test="createAt != null">create_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mid != null">#{mid},</if>
            <if test="code != null">#{code},</if>
            <if test="date != null">#{date},</if>
            <if test="type != null">#{type},</if>
            <if test="name != null">#{name},</if>
            <if test="number != null">#{number},</if>
            <if test="createAt != null">#{createAt},</if>
         </trim>
    </insert>

    <update id="updateDataMemberCoinItem" parameterType="DataMemberCoinItem">
        update data_member_coin_item
        <trim prefix="SET" suffixOverrides=",">
            <if test="mid != null">mid = #{mid},</if>
            <if test="code != null">code = #{code},</if>
            <if test="date != null">date = #{date},</if>
            <if test="type != null">type = #{type},</if>
            <if test="name != null">name = #{name},</if>
            <if test="number != null">number = #{number},</if>
            <if test="createAt != null">create_at = #{createAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDataMemberCoinItemById" parameterType="Long">
        delete from data_member_coin_item where id = #{id}
    </delete>

    <delete id="deleteDataMemberCoinItemByIds" parameterType="String">
        delete from data_member_coin_item where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>